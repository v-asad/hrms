generator client {
  provider = "prisma-client-js"
  seed     = "ts-node --compiler-options '{\"module\":\"CommonJS\"}' prisma/seed.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  passwordHash   String
  roles          UserRole[]
  permissions    UserPermission[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  refreshTokens  RefreshToken[]
}

model Role {
  id          String         @id @default(uuid())
  name        String         @unique
  permissions RolePermission[]
  users       UserRole[]
}

model Permission {
  id    String  @id @default(uuid())
  name  String  @unique
  roles RolePermission[]
  users UserPermission[]
}

model UserRole {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String
}

model RolePermission {
  id           String      @id @default(uuid())
  role         Role        @relation(fields: [roleId], references: [id])
  roleId       String
  permission   Permission  @relation(fields: [permissionId], references: [id])
  permissionId String
}

model UserPermission {
  id           String      @id @default(uuid())
  user         User        @relation(fields: [userId], references: [id])
  userId       String
  permission   Permission  @relation(fields: [permissionId], references: [id])
  permissionId String
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
}
